services:
  api:
    image: ${REGISTRY}/${API_IMAGE_NAME:-top-ai-ideas-api}:${API_VERSION:-latest}
    build:
      context: ./api
      dockerfile: Dockerfile
      target: ${API_BUILD_TARGET:-dev}
    command: sh -c "npm install && npm run db:migrate && npm run dev"
    volumes:
      - ./api:/app
      - api_node_modules:/app/node_modules
    environment:
      - NODE_ENV=development
      - DATABASE_URL=${DATABASE_URL:-postgres://${PGUSER:-app}:${PGPASSWORD:-app}@${PGHOST:-postgres}:${PGPORT:-5432}/${PGDATABASE:-app}}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - TAVILY_API_KEY=${TAVILY_API_KEY}
    ports:
      - "8787:8787"
    depends_on:
      - postgres
    tty: true

  ui:
    image: ${REGISTRY}/${UI_IMAGE_NAME:-top-ai-ideas-ui}:${UI_VERSION:-latest}
    build:
      context: ./ui
      dockerfile: Dockerfile
      target: dev
    command: sh -c "npm install && npm run dev -- --host 0.0.0.0 --port 5173"
    volumes:
      - ./ui:/app
      - ui_node_modules:/app/node_modules
    environment:
      - NODE_ENV=development
      - VITE_API_BASE_URL=http://localhost:8787/api/v1
    ports:
      - "5173:5173"
    depends_on:
      - api
    tty: true

  # sqlite/litestream removed after migration to Postgres

  postgres:
    image: postgres:16-alpine
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-app}
      - POSTGRES_USER=${POSTGRES_USER:-app}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-app}
    # Internal only; no host port publish needed
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 10
    volumes:
      - pg_data:/var/lib/postgresql/data


volumes:
  api_node_modules:
  ui_node_modules:
  pg_data:
