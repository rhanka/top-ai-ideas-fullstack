name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      global: ${{ steps.filter.outputs.global }}
      api: ${{ steps.filter.outputs.api }}
      scheduler: ${{ steps.filter.outputs.scheduler }}
      workers: ${{ steps.filter.outputs.workers }}
      ui: ${{ steps.filter.outputs.ui }}
      ai: ${{ steps.filter.outputs.ai }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            global:
              - 'Makefile'
              - 'docker-compose.yml'
              - 'docker-compose.test.yml'
              - '.github/workflows/ci.yml'
              - 'e2e/**'
            api:
              - 'api/**'
            ui:
              - 'ui/**'

  # Build API Docker image
  build-e2e:
    runs-on: ubuntu-latest
    needs: [changes]
    if: needs.changes.outputs.api == 'true' || needs.changes.outputs.global == 'true'
    steps:
      - uses: actions/checkout@v4
      - name: Setup Docker
        uses: docker/setup-buildx-action@v3
      - name: Build e2e image
        run: make build-e2e
      - name: Save e2e image as artifact
        run: make save-e2e
      - name: Upload e2e image artifact
        uses: actions/upload-artifact@v4
        with:
          name: e2e-image
          path: e2e-image.tar

  # Build API Docker image
  build-api:
    runs-on: ubuntu-latest
    needs: [changes]
    if: needs.changes.outputs.api == 'true' || needs.changes.outputs.global == 'true'
    steps:
      - uses: actions/checkout@v4
      - name: Setup Docker
        uses: docker/setup-buildx-action@v3
      - name: Build API image
        run: make build-api
      - name: Unit Test API
        run: make up wait-ready test-api-smoke test-api-unit test-api-endpoints test-api-queue
      - name: Save API image as artifact
        run: make save-api
      - name: Upload API image artifact
        uses: actions/upload-artifact@v4
        with:
          name: api-image
          path: api-image.tar

  # Build & Unit Test UI
  build-ui:
    runs-on: ubuntu-latest
    needs: [changes]
    if: needs.changes.outputs.ui == 'true' || needs.changes.outputs.api == 'true' || needs.changes.outputs.global == 'true'
    steps:
      - uses: actions/checkout@v4
      - name: Setup Docker
        uses: docker/setup-buildx-action@v3
      - name: Build UI image
        run: make build-ui
      - name: Unit Test UI
        run: make test-ui
      - name: Save UI image as artifact
        run: make save-ui
      - name: Upload UI image artifact
        uses: actions/upload-artifact@v4
        with:
          name: ui-image
          path: ui-image.tar
      - name: Upload static files as artifact
        id: deployment
        uses: actions/upload-pages-artifact@v3
        with:
          path: ui/build/

  # Tests integration API AI
  test-api-ai:
    runs-on: ubuntu-latest
    needs: [changes, build-api]
    if: needs.changes.outputs.api == 'true' || needs.changes.outputs.global == 'true'
    steps:
      - uses: actions/checkout@v4
      - name: Setup Docker
        uses: docker/setup-buildx-action@v3
      - name: Download API image artifact
        uses: actions/download-artifact@v4
        with:
          name: api-image
          path: .
      - name: Load API image from artifact
        run: make load-api
      - name: Test API AI services
        run: make up-api wait-ready-api test-api-ai
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          TAVILY_API_KEY: ${{ secrets.TAVILY_API_KEY }}

  test-e2e:
    runs-on: ubuntu-latest
    needs: [changes, build-api, build-ui, build-e2e]
    if: needs.changes.outputs.ui == 'true' || needs.changes.outputs.api == 'true' || needs.changes.outputs.global == 'true'
    steps:
      - uses: actions/checkout@v4
      - name: Setup Docker
        uses: docker/setup-buildx-action@v3
      - name: Download API image artifact
        uses: actions/download-artifact@v4
        with:
          name: api-image
          path: .
      - name: Load API image from artifact
        run: make load-api
      - name: Download UI image artifact
        uses: actions/download-artifact@v4
        with:
          name: ui-image
          path: .
      - name: Load UI image from artifact
        run: make load-ui
      - name: Download e2e image artifact
        uses: actions/download-artifact@v4
        with:
          name: e2e-image
          path: .
      - name: Load e2e image from artifact
        run: make load-e2e
      - name: Test e2e API & UI
        run: make test-e2e
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          TAVILY_API_KEY: ${{ secrets.TAVILY_API_KEY }}

  publish-api-image:
    runs-on: ubuntu-latest
    needs: [test-e2e]
    if: (needs.changes.outputs.api == 'true' || needs.changes.outputs.global == 'true') && branch == 'main'
    steps:
      - uses: actions/checkout@v4
      - name: Download API image artifact
        uses: actions/download-artifact@v4
        with:
          name: api-image
          path: .
      - name: Load API image from artifact
        run: make load-api
      - name: Publish API image
        run: make publish-api-image

  # Deploy UI
  deploy-ui:
    runs-on: ubuntu-latest
    needs: [test-e2e]
    if: ( needs.changes.outputs.ui == 'true' || needs.changes.outputs.global == 'true' ) && branch == 'main'
    steps:
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4

  # Deploy API
  deploy-api:
    runs-on: ubuntu-latest
    needs: [publish-api-image]
    if: ( needs.changes.outputs.api == 'true' || needs.changes.outputs.global == 'true' ) && branch == 'main'
    steps:
      - uses: actions/checkout@v4
      - name: Deploy API
        run: make deploy-api