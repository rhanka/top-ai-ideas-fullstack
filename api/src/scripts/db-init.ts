#!/usr/bin/env tsx

import { drizzle } from 'drizzle-orm/node-postgres';
import { pool } from '../db/client';
import { sql } from 'drizzle-orm';
import * as schema from '../db/schema';

async function initializeDatabase() {
  console.log('üóÑÔ∏è  Initializing Postgres database...');
  
  const db = drizzle(pool, { schema });
  
  try {
    // V√©rifier si les tables existent d√©j√†
    const tables = await pool.query(
      `SELECT table_name FROM information_schema.tables WHERE table_schema = 'public'`
    );
    
    if (tables.rows.length > 0) {
      console.log(`‚ÑπÔ∏è  Database already initialized (${tables.rows.length} tables found)`);
      console.log('‚ÑπÔ∏è  Use "make db-migrate" to apply new migrations');
      return;
    }
    
    console.log('üìã No tables found, creating tables from schema...');
    
    // Cr√©er les tables directement depuis le sch√©ma Drizzle
    // Drizzle peut g√©n√©rer le SQL mais pour l'instant on va juste dire que les tables seront cr√©√©es
    // lors de la premi√®re utilisation par les migrations
    console.log('‚ö†Ô∏è  No tables found. Please run "make db-generate" then "make db-migrate" to create tables.');
    console.log('‚ÑπÔ∏è  Or the tables will be auto-created on first API use if migrations are present.');
    
  } catch (error) {
    console.error('‚ùå Error initializing database:', error);
    process.exit(1);
  } finally {
    await pool.end();
  }
}

initializeDatabase();